{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOAD_POSTS, REMOVE_POST, TOGGLE_BOOKED } from \"../types\";\nvar initialState = {\n  allPosts: [],\n  bookedPosts: []\n};\nexport var postReducer = function postReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        allPosts: action.payload,\n        bookedPosts: action.payload.filter(function (post) {\n          return post.booked;\n        })\n      });\n\n    case TOGGLE_BOOKED:\n      var allPosts = state.allPosts.map(function (post) {\n        if (post.id === action.payload) {\n          post.booked = !post.booked;\n        }\n\n        return post;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        allPosts: allPosts,\n        bookedPosts: allPosts.filter(function (post) {\n          return post.booked;\n        })\n      });\n\n    case REMOVE_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        allPosts: state.allPosts.filter(function (p) {\n          return p.id !== action.payload;\n        }),\n        bookedPosts: state.bookedPosts.filter(function (p) {\n          return p.id !== action.payload;\n        })\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/macbook/Desktop/PRACTIC REACT-NATIVE/react_native_self_posts/src/store/reducers/post.js"],"names":["LOAD_POSTS","REMOVE_POST","TOGGLE_BOOKED","initialState","allPosts","bookedPosts","postReducer","state","action","type","payload","filter","post","booked","map","id","p"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAKA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,UAAL;AACE,6CACKO,KADL;AAEEH,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAFnB;AAGEL,QAAAA,WAAW,EAAEG,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsB,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACC,MAAf;AAAA,SAAtB;AAHf;;AAKF,SAAKX,aAAL;AACE,UAAME,QAAQ,GAAGG,KAAK,CAACH,QAAN,CAAeU,GAAf,CAAmB,UAACF,IAAD,EAAU;AAC5C,YAAIA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACE,OAAvB,EAAgC;AAC9BE,UAAAA,IAAI,CAACC,MAAL,GAAc,CAACD,IAAI,CAACC,MAApB;AACD;;AACD,eAAOD,IAAP;AACD,OALgB,CAAjB;AAOA,6CACKL,KADL;AAEEH,QAAAA,QAAQ,EAARA,QAFF;AAGEC,QAAAA,WAAW,EAAED,QAAQ,CAACO,MAAT,CAAgB,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACC,MAAf;AAAA,SAAhB;AAHf;;AAMF,SAAKZ,WAAL;AACE,6CACKM,KADL;AAEEH,QAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeO,MAAf,CAAsB,UAACK,CAAD;AAAA,iBAAOA,CAAC,CAACD,EAAF,KAASP,MAAM,CAACE,OAAvB;AAAA,SAAtB,CAFZ;AAGEL,QAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,CAAkBM,MAAlB,CAAyB,UAACK,CAAD;AAAA,iBAAOA,CAAC,CAACD,EAAF,KAASP,MAAM,CAACE,OAAvB;AAAA,SAAzB;AAHf;;AAKF;AACE,aAAOH,KAAP;AA5BJ;AA8BD,CA/BM","sourcesContent":["import { LOAD_POSTS, REMOVE_POST, TOGGLE_BOOKED } from \"../types\";\n\nconst initialState = {\n  allPosts: [],\n  bookedPosts: [],\n};\n\nexport const postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_POSTS:\n      return {\n        ...state,\n        allPosts: action.payload,\n        bookedPosts: action.payload.filter((post) => post.booked),\n      };\n    case TOGGLE_BOOKED:\n      const allPosts = state.allPosts.map((post) => {\n        if (post.id === action.payload) {\n          post.booked = !post.booked;\n        }\n        return post;\n      });\n\n      return {\n        ...state,\n        allPosts,\n        bookedPosts: allPosts.filter((post) => post.booked),\n      };\n\n    case REMOVE_POST:\n      return {\n        ...state,\n        allPosts: state.allPosts.filter((p) => p.id !== action.payload),\n        bookedPosts: state.bookedPosts.filter((p) => p.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}