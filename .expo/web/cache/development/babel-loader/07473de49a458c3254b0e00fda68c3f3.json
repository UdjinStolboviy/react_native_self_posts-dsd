{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/macbook/Desktop/PRACTIC REACT-NATIVE/react_native_self_posts/App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AppLoading } from 'expo';\nimport { Provider } from 'react-redux';\nimport { AppNavigation } from \"./src/navigation/AppNavigation\";\nimport { bootstrap } from \"./src/bootstrap\";\nimport store from \"./src/store\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  if (!isReady) {\n    return React.createElement(AppLoading, {\n      startAsync: bootstrap,\n      onFinish: function onFinish() {\n        return setIsReady(true);\n      },\n      onError: function onError(err) {\n        return console.log(err);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(AppNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/PRACTIC REACT-NATIVE/react_native_self_posts/App.js"],"names":["React","useState","AppLoading","Provider","AppNavigation","bootstrap","store","App","isReady","setIsReady","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT;AACA,SAASC,SAAT;AACA,OAAOC,KAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAA8BN,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOO,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAI,CAACD,OAAL,EAAc;AACZ,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEH,SADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMI,UAAU,CAAC,IAAD,CAAhB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAE,iBAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAED,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { AppLoading } from 'expo'\nimport { Provider } from 'react-redux'\nimport { AppNavigation } from './src/navigation/AppNavigation'\nimport { bootstrap } from './src/bootstrap'\nimport store from './src/store'\n\nexport default function App() {\n  const [isReady, setIsReady] = useState(false)\n\n  if (!isReady) {\n    return (\n      <AppLoading\n        startAsync={bootstrap}\n        onFinish={() => setIsReady(true)}\n        onError={err => console.log(err)}\n      />\n    )\n  }\n\n  return (\n    <Provider store={store}>\n      <AppNavigation />\n    </Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}